#:kivy 2.1.0
#:import utils dad_player.utils
#:import SongListItem dad_player.ui.widgets.song_list_item.SongListItem
#:import IconButton dad_player.ui.widgets.icon_button.IconButton

<PlaylistView>:
    orientation: 'vertical'
    padding: dp(5)
    spacing: dp(5)

    BoxLayout:
        size_hint_y: None
        height: dp(48)
        spacing: dp(10)
        
        Label:
            text: "Current Playlist"
            font_size: utils.spx(18)
            halign: 'left'
            valign: 'center'
            size_hint_x: 0.6 # Give more space to title
            padding_x: dp(5)

        IconButton:
            id: shuffle_playlist_button
            text: "ðŸ”€" # Shuffle emoji or icon font character
            font_name: "Roboto" # Ensure font supports it
            icon_font_size_spx: 18
            size_hint_x: None
            width: dp(48)
            # Visual feedback for shuffle state can be managed in Python by changing icon_color_normal
            # e.g., root.ids.shuffle_playlist_button.icon_color_normal = [0.1, 0.7, 0.9, 1] if shuffled else [0.9,0.9,0.9,1]
            on_release: root.on_shuffle_playlist_button_press()

        Button: # Standard button for clear
            text: "Clear"
            font_size: utils.spx(12)
            size_hint_x: None
            width: dp(80)
            on_release: root.on_clear_playlist_button_press()
            background_color: [0.7, 0.3, 0.3, 1] # Reddish
            background_normal: ''

    RecycleView:
        id: playlist_rv
        data: root.playlist_data
        viewclass: 'SongListItem' # Reuse the SongListItem widget
        scroll_type: ['bars', 'content']
        bar_width: dp(10)
        
        RecycleBoxLayout:
            orientation: 'vertical'
            default_size: None, utils.spx(60) # Height from SongListItem KV
            default_size_hint: 1, None
            size_hint_y: None
            height: self.minimum_height
            padding: dp(5)
            spacing: dp(2)

    Label:
        id: playlist_status_label
        text: root.status_text
        size_hint_y: None
        height: self.texture_size[1] if root.status_text else 0 # Only take space if text exists
        opacity: 1 if root.status_text else 0
        font_size: utils.spx(14)
        color: [0.8, 0.8, 0.8, 1] # Neutral color for status
        padding_y: dp(10)
